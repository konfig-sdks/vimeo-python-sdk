# coding: utf-8

"""
    Vimeo API

    Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

    The version of the OpenAPI document: 3.4
    Created by: https://developer.vimeo.com/help
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from vimeo_python_sdk import schemas  # noqa: F401


class LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            title = schemas.StrSchema
            auto_cc_enabled = schemas.BoolSchema
            auto_cc_keywords = schemas.StrSchema
            
            
            class auto_cc_language(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def DEDE(cls):
                    return cls("de-DE")
                
                @schemas.classproperty
                def ENUS(cls):
                    return cls("en-US")
                
                @schemas.classproperty
                def ESES(cls):
                    return cls("es-ES")
                
                @schemas.classproperty
                def FRFR(cls):
                    return cls("fr-FR")
                
                @schemas.classproperty
                def PTBR(cls):
                    return cls("pt-BR")
            automatically_title_stream = schemas.BoolSchema
            chat_enabled = schemas.BoolSchema
        
            @staticmethod
            def content_rating() -> typing.Type['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2ContentRating']:
                return LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2ContentRating
            dvr = schemas.BoolSchema
        
            @staticmethod
            def embed() -> typing.Type['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2Embed']:
                return LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2Embed
        
            @staticmethod
            def interaction_tools_settings() -> typing.Type['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2InteractionToolsSettings']:
                return LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2InteractionToolsSettings
            
            
            class playlist_sort(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def ADDED_FIRST(cls):
                    return cls("added_first")
                
                @schemas.classproperty
                def ADDED_LAST(cls):
                    return cls("added_last")
                
                @schemas.classproperty
                def ALPHABETICAL(cls):
                    return cls("alphabetical")
                
                @schemas.classproperty
                def ARRANGED(cls):
                    return cls("arranged")
                
                @schemas.classproperty
                def COMMENTS(cls):
                    return cls("comments")
                
                @schemas.classproperty
                def DURATION(cls):
                    return cls("duration")
                
                @schemas.classproperty
                def LIKES(cls):
                    return cls("likes")
                
                @schemas.classproperty
                def NEWEST(cls):
                    return cls("newest")
                
                @schemas.classproperty
                def OLDEST(cls):
                    return cls("oldest")
                
                @schemas.classproperty
                def PLAYS(cls):
                    return cls("plays")
        
            @staticmethod
            def schedule() -> typing.Type['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2Schedule']:
                return LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2Schedule
            scheduled_playback = schemas.BoolSchema
            stream_description = schemas.StrSchema
        
            @staticmethod
            def stream_embed() -> typing.Type['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2StreamEmbed']:
                return LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2StreamEmbed
            
            
            class stream_mode(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def LIVE(cls):
                    return cls("live")
                
                @schemas.classproperty
                def RECORD(cls):
                    return cls("record")
                
                @schemas.classproperty
                def SIMULIVE(cls):
                    return cls("simulive")
            stream_password = schemas.StrSchema
        
            @staticmethod
            def stream_privacy() -> typing.Type['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2StreamPrivacy']:
                return LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2StreamPrivacy
            stream_title = schemas.StrSchema
            time_zone = schemas.StrSchema
            __annotations__ = {
                "title": title,
                "auto_cc_enabled": auto_cc_enabled,
                "auto_cc_keywords": auto_cc_keywords,
                "auto_cc_language": auto_cc_language,
                "automatically_title_stream": automatically_title_stream,
                "chat_enabled": chat_enabled,
                "content_rating": content_rating,
                "dvr": dvr,
                "embed": embed,
                "interaction_tools_settings": interaction_tools_settings,
                "playlist_sort": playlist_sort,
                "schedule": schedule,
                "scheduled_playback": scheduled_playback,
                "stream_description": stream_description,
                "stream_embed": stream_embed,
                "stream_mode": stream_mode,
                "stream_password": stream_password,
                "stream_privacy": stream_privacy,
                "stream_title": stream_title,
                "time_zone": time_zone,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["auto_cc_enabled"]) -> MetaOapg.properties.auto_cc_enabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["auto_cc_keywords"]) -> MetaOapg.properties.auto_cc_keywords: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["auto_cc_language"]) -> MetaOapg.properties.auto_cc_language: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["automatically_title_stream"]) -> MetaOapg.properties.automatically_title_stream: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["chat_enabled"]) -> MetaOapg.properties.chat_enabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["content_rating"]) -> 'LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2ContentRating': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dvr"]) -> MetaOapg.properties.dvr: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["embed"]) -> 'LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2Embed': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["interaction_tools_settings"]) -> 'LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2InteractionToolsSettings': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["playlist_sort"]) -> MetaOapg.properties.playlist_sort: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["schedule"]) -> 'LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2Schedule': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scheduled_playback"]) -> MetaOapg.properties.scheduled_playback: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stream_description"]) -> MetaOapg.properties.stream_description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stream_embed"]) -> 'LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2StreamEmbed': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stream_mode"]) -> MetaOapg.properties.stream_mode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stream_password"]) -> MetaOapg.properties.stream_password: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stream_privacy"]) -> 'LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2StreamPrivacy': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stream_title"]) -> MetaOapg.properties.stream_title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["time_zone"]) -> MetaOapg.properties.time_zone: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["title", "auto_cc_enabled", "auto_cc_keywords", "auto_cc_language", "automatically_title_stream", "chat_enabled", "content_rating", "dvr", "embed", "interaction_tools_settings", "playlist_sort", "schedule", "scheduled_playback", "stream_description", "stream_embed", "stream_mode", "stream_password", "stream_privacy", "stream_title", "time_zone", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["title"]) -> typing.Union[MetaOapg.properties.title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["auto_cc_enabled"]) -> typing.Union[MetaOapg.properties.auto_cc_enabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["auto_cc_keywords"]) -> typing.Union[MetaOapg.properties.auto_cc_keywords, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["auto_cc_language"]) -> typing.Union[MetaOapg.properties.auto_cc_language, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["automatically_title_stream"]) -> typing.Union[MetaOapg.properties.automatically_title_stream, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["chat_enabled"]) -> typing.Union[MetaOapg.properties.chat_enabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["content_rating"]) -> typing.Union['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2ContentRating', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dvr"]) -> typing.Union[MetaOapg.properties.dvr, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["embed"]) -> typing.Union['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2Embed', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["interaction_tools_settings"]) -> typing.Union['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2InteractionToolsSettings', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["playlist_sort"]) -> typing.Union[MetaOapg.properties.playlist_sort, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["schedule"]) -> typing.Union['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2Schedule', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scheduled_playback"]) -> typing.Union[MetaOapg.properties.scheduled_playback, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stream_description"]) -> typing.Union[MetaOapg.properties.stream_description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stream_embed"]) -> typing.Union['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2StreamEmbed', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stream_mode"]) -> typing.Union[MetaOapg.properties.stream_mode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stream_password"]) -> typing.Union[MetaOapg.properties.stream_password, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stream_privacy"]) -> typing.Union['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2StreamPrivacy', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stream_title"]) -> typing.Union[MetaOapg.properties.stream_title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["time_zone"]) -> typing.Union[MetaOapg.properties.time_zone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["title", "auto_cc_enabled", "auto_cc_keywords", "auto_cc_language", "automatically_title_stream", "chat_enabled", "content_rating", "dvr", "embed", "interaction_tools_settings", "playlist_sort", "schedule", "scheduled_playback", "stream_description", "stream_embed", "stream_mode", "stream_password", "stream_privacy", "stream_title", "time_zone", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        title: typing.Union[MetaOapg.properties.title, str, schemas.Unset] = schemas.unset,
        auto_cc_enabled: typing.Union[MetaOapg.properties.auto_cc_enabled, bool, schemas.Unset] = schemas.unset,
        auto_cc_keywords: typing.Union[MetaOapg.properties.auto_cc_keywords, str, schemas.Unset] = schemas.unset,
        auto_cc_language: typing.Union[MetaOapg.properties.auto_cc_language, str, schemas.Unset] = schemas.unset,
        automatically_title_stream: typing.Union[MetaOapg.properties.automatically_title_stream, bool, schemas.Unset] = schemas.unset,
        chat_enabled: typing.Union[MetaOapg.properties.chat_enabled, bool, schemas.Unset] = schemas.unset,
        content_rating: typing.Union['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2ContentRating', schemas.Unset] = schemas.unset,
        dvr: typing.Union[MetaOapg.properties.dvr, bool, schemas.Unset] = schemas.unset,
        embed: typing.Union['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2Embed', schemas.Unset] = schemas.unset,
        interaction_tools_settings: typing.Union['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2InteractionToolsSettings', schemas.Unset] = schemas.unset,
        playlist_sort: typing.Union[MetaOapg.properties.playlist_sort, str, schemas.Unset] = schemas.unset,
        schedule: typing.Union['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2Schedule', schemas.Unset] = schemas.unset,
        scheduled_playback: typing.Union[MetaOapg.properties.scheduled_playback, bool, schemas.Unset] = schemas.unset,
        stream_description: typing.Union[MetaOapg.properties.stream_description, str, schemas.Unset] = schemas.unset,
        stream_embed: typing.Union['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2StreamEmbed', schemas.Unset] = schemas.unset,
        stream_mode: typing.Union[MetaOapg.properties.stream_mode, str, schemas.Unset] = schemas.unset,
        stream_password: typing.Union[MetaOapg.properties.stream_password, str, schemas.Unset] = schemas.unset,
        stream_privacy: typing.Union['LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2StreamPrivacy', schemas.Unset] = schemas.unset,
        stream_title: typing.Union[MetaOapg.properties.stream_title, str, schemas.Unset] = schemas.unset,
        time_zone: typing.Union[MetaOapg.properties.time_zone, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2':
        return super().__new__(
            cls,
            *args,
            title=title,
            auto_cc_enabled=auto_cc_enabled,
            auto_cc_keywords=auto_cc_keywords,
            auto_cc_language=auto_cc_language,
            automatically_title_stream=automatically_title_stream,
            chat_enabled=chat_enabled,
            content_rating=content_rating,
            dvr=dvr,
            embed=embed,
            interaction_tools_settings=interaction_tools_settings,
            playlist_sort=playlist_sort,
            schedule=schedule,
            scheduled_playback=scheduled_playback,
            stream_description=stream_description,
            stream_embed=stream_embed,
            stream_mode=stream_mode,
            stream_password=stream_password,
            stream_privacy=stream_privacy,
            stream_title=stream_title,
            time_zone=time_zone,
            _configuration=_configuration,
            **kwargs,
        )

from vimeo_python_sdk.model.live_essentials_update_event_belonging_to_authenticated_user_request2_content_rating import LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2ContentRating
from vimeo_python_sdk.model.live_essentials_update_event_belonging_to_authenticated_user_request2_embed import LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2Embed
from vimeo_python_sdk.model.live_essentials_update_event_belonging_to_authenticated_user_request2_interaction_tools_settings import LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2InteractionToolsSettings
from vimeo_python_sdk.model.live_essentials_update_event_belonging_to_authenticated_user_request2_schedule import LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2Schedule
from vimeo_python_sdk.model.live_essentials_update_event_belonging_to_authenticated_user_request2_stream_embed import LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2StreamEmbed
from vimeo_python_sdk.model.live_essentials_update_event_belonging_to_authenticated_user_request2_stream_privacy import LiveEssentialsUpdateEventBelongingToAuthenticatedUserRequest2StreamPrivacy
