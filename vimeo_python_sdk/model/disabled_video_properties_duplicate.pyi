# coding: utf-8

"""
    Vimeo API

    Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

    The version of the OpenAPI document: 3.4
    Created by: https://developer.vimeo.com/help
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from vimeo_python_sdk import schemas  # noqa: F401


class DisabledVideoPropertiesDuplicate(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    An object that represents the reason why duplication is disabled for the video.
    """


    class MetaOapg:
        required = {
            "reasons",
            "enable_link",
            "key_path",
            "min_tier_for_capability",
        }
        
        class properties:
            enable_link = schemas.StrSchema
            key_path = schemas.StrSchema
            
            
            class min_tier_for_capability(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def BASIC(cls):
                    return cls("basic")
                
                @schemas.classproperty
                def BUSINESS(cls):
                    return cls("business")
                
                @schemas.classproperty
                def ENTERPRISE(cls):
                    return cls("enterprise")
                
                @schemas.classproperty
                def LIVE_BUSINESS(cls):
                    return cls("live_business")
                
                @schemas.classproperty
                def LIVE_PREMIUM(cls):
                    return cls("live_premium")
                
                @schemas.classproperty
                def LIVE_PRO(cls):
                    return cls("live_pro")
                
                @schemas.classproperty
                def PLUS(cls):
                    return cls("plus")
                
                @schemas.classproperty
                def PRO(cls):
                    return cls("pro")
                
                @schemas.classproperty
                def PRO_UNLIMITED(cls):
                    return cls("pro_unlimited")
                
                @schemas.classproperty
                def PRODUCER(cls):
                    return cls("producer")
        
            @staticmethod
            def reasons() -> typing.Type['DisabledVideoPropertiesDuplicateReasons']:
                return DisabledVideoPropertiesDuplicateReasons
            __annotations__ = {
                "enable_link": enable_link,
                "key_path": key_path,
                "min_tier_for_capability": min_tier_for_capability,
                "reasons": reasons,
            }
    
    reasons: 'DisabledVideoPropertiesDuplicateReasons'
    enable_link: MetaOapg.properties.enable_link
    key_path: MetaOapg.properties.key_path
    min_tier_for_capability: MetaOapg.properties.min_tier_for_capability
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enable_link"]) -> MetaOapg.properties.enable_link: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["key_path"]) -> MetaOapg.properties.key_path: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["min_tier_for_capability"]) -> MetaOapg.properties.min_tier_for_capability: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reasons"]) -> 'DisabledVideoPropertiesDuplicateReasons': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["enable_link", "key_path", "min_tier_for_capability", "reasons", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enable_link"]) -> MetaOapg.properties.enable_link: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["key_path"]) -> MetaOapg.properties.key_path: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["min_tier_for_capability"]) -> MetaOapg.properties.min_tier_for_capability: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reasons"]) -> 'DisabledVideoPropertiesDuplicateReasons': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["enable_link", "key_path", "min_tier_for_capability", "reasons", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        reasons: 'DisabledVideoPropertiesDuplicateReasons',
        enable_link: typing.Union[MetaOapg.properties.enable_link, str, ],
        key_path: typing.Union[MetaOapg.properties.key_path, str, ],
        min_tier_for_capability: typing.Union[MetaOapg.properties.min_tier_for_capability, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DisabledVideoPropertiesDuplicate':
        return super().__new__(
            cls,
            *args,
            reasons=reasons,
            enable_link=enable_link,
            key_path=key_path,
            min_tier_for_capability=min_tier_for_capability,
            _configuration=_configuration,
            **kwargs,
        )

from vimeo_python_sdk.model.disabled_video_properties_duplicate_reasons import DisabledVideoPropertiesDuplicateReasons
