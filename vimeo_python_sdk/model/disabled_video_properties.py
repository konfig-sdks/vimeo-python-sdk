# coding: utf-8

"""
    Vimeo API

    Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

    The version of the OpenAPI document: 3.4
    Created by: https://developer.vimeo.com/help
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from vimeo_python_sdk import schemas  # noqa: F401


class DisabledVideoProperties(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "add_to_collection",
            "download",
            "embed_presets",
            "duplicate",
            "embed",
            "edit_privacy",
        }
        
        class properties:
        
            @staticmethod
            def add_to_collection() -> typing.Type['DisabledVideoPropertiesAddToCollection']:
                return DisabledVideoPropertiesAddToCollection
        
            @staticmethod
            def download() -> typing.Type['DisabledVideoPropertiesDownload']:
                return DisabledVideoPropertiesDownload
        
            @staticmethod
            def duplicate() -> typing.Type['DisabledVideoPropertiesDuplicate']:
                return DisabledVideoPropertiesDuplicate
        
            @staticmethod
            def edit_privacy() -> typing.Type['DisabledVideoPropertiesEditPrivacy']:
                return DisabledVideoPropertiesEditPrivacy
        
            @staticmethod
            def embed() -> typing.Type['DisabledVideoPropertiesEmbed']:
                return DisabledVideoPropertiesEmbed
        
            @staticmethod
            def embed_presets() -> typing.Type['DisabledVideoPropertiesEmbedPresets']:
                return DisabledVideoPropertiesEmbedPresets
            __annotations__ = {
                "add_to_collection": add_to_collection,
                "download": download,
                "duplicate": duplicate,
                "edit_privacy": edit_privacy,
                "embed": embed,
                "embed_presets": embed_presets,
            }
    
    add_to_collection: 'DisabledVideoPropertiesAddToCollection'
    download: 'DisabledVideoPropertiesDownload'
    embed_presets: 'DisabledVideoPropertiesEmbedPresets'
    duplicate: 'DisabledVideoPropertiesDuplicate'
    embed: 'DisabledVideoPropertiesEmbed'
    edit_privacy: 'DisabledVideoPropertiesEditPrivacy'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["add_to_collection"]) -> 'DisabledVideoPropertiesAddToCollection': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["download"]) -> 'DisabledVideoPropertiesDownload': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["duplicate"]) -> 'DisabledVideoPropertiesDuplicate': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["edit_privacy"]) -> 'DisabledVideoPropertiesEditPrivacy': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["embed"]) -> 'DisabledVideoPropertiesEmbed': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["embed_presets"]) -> 'DisabledVideoPropertiesEmbedPresets': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["add_to_collection", "download", "duplicate", "edit_privacy", "embed", "embed_presets", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["add_to_collection"]) -> 'DisabledVideoPropertiesAddToCollection': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["download"]) -> 'DisabledVideoPropertiesDownload': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["duplicate"]) -> 'DisabledVideoPropertiesDuplicate': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["edit_privacy"]) -> 'DisabledVideoPropertiesEditPrivacy': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["embed"]) -> 'DisabledVideoPropertiesEmbed': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["embed_presets"]) -> 'DisabledVideoPropertiesEmbedPresets': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["add_to_collection", "download", "duplicate", "edit_privacy", "embed", "embed_presets", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        add_to_collection: 'DisabledVideoPropertiesAddToCollection',
        download: 'DisabledVideoPropertiesDownload',
        embed_presets: 'DisabledVideoPropertiesEmbedPresets',
        duplicate: 'DisabledVideoPropertiesDuplicate',
        embed: 'DisabledVideoPropertiesEmbed',
        edit_privacy: 'DisabledVideoPropertiesEditPrivacy',
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DisabledVideoProperties':
        return super().__new__(
            cls,
            *args,
            add_to_collection=add_to_collection,
            download=download,
            embed_presets=embed_presets,
            duplicate=duplicate,
            embed=embed,
            edit_privacy=edit_privacy,
            _configuration=_configuration,
            **kwargs,
        )

from vimeo_python_sdk.model.disabled_video_properties_add_to_collection import DisabledVideoPropertiesAddToCollection
from vimeo_python_sdk.model.disabled_video_properties_download import DisabledVideoPropertiesDownload
from vimeo_python_sdk.model.disabled_video_properties_duplicate import DisabledVideoPropertiesDuplicate
from vimeo_python_sdk.model.disabled_video_properties_edit_privacy import DisabledVideoPropertiesEditPrivacy
from vimeo_python_sdk.model.disabled_video_properties_embed import DisabledVideoPropertiesEmbed
from vimeo_python_sdk.model.disabled_video_properties_embed_presets import DisabledVideoPropertiesEmbedPresets
