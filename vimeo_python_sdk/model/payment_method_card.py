# coding: utf-8

"""
    Vimeo API

    Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

    The version of the OpenAPI document: 3.4
    Created by: https://developer.vimeo.com/help
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from vimeo_python_sdk import schemas  # noqa: F401


class PaymentMethodCard(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Information about the card used to make the payment.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def billing_address() -> typing.Type['PaymentMethodCardBillingAddress']:
                return PaymentMethodCardBillingAddress
            bin = schemas.StrSchema
            brand = schemas.StrSchema
            cardholder_name = schemas.StrSchema
            expiration_month = schemas.NumberSchema
            expiration_year = schemas.NumberSchema
            last_four_digits = schemas.StrSchema
            __annotations__ = {
                "billing_address": billing_address,
                "bin": bin,
                "brand": brand,
                "cardholder_name": cardholder_name,
                "expiration_month": expiration_month,
                "expiration_year": expiration_year,
                "last_four_digits": last_four_digits,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["billing_address"]) -> 'PaymentMethodCardBillingAddress': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bin"]) -> MetaOapg.properties.bin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["brand"]) -> MetaOapg.properties.brand: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cardholder_name"]) -> MetaOapg.properties.cardholder_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["expiration_month"]) -> MetaOapg.properties.expiration_month: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["expiration_year"]) -> MetaOapg.properties.expiration_year: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_four_digits"]) -> MetaOapg.properties.last_four_digits: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["billing_address", "bin", "brand", "cardholder_name", "expiration_month", "expiration_year", "last_four_digits", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["billing_address"]) -> typing.Union['PaymentMethodCardBillingAddress', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bin"]) -> typing.Union[MetaOapg.properties.bin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["brand"]) -> typing.Union[MetaOapg.properties.brand, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cardholder_name"]) -> typing.Union[MetaOapg.properties.cardholder_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["expiration_month"]) -> typing.Union[MetaOapg.properties.expiration_month, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["expiration_year"]) -> typing.Union[MetaOapg.properties.expiration_year, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_four_digits"]) -> typing.Union[MetaOapg.properties.last_four_digits, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["billing_address", "bin", "brand", "cardholder_name", "expiration_month", "expiration_year", "last_four_digits", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        billing_address: typing.Union['PaymentMethodCardBillingAddress', schemas.Unset] = schemas.unset,
        bin: typing.Union[MetaOapg.properties.bin, str, schemas.Unset] = schemas.unset,
        brand: typing.Union[MetaOapg.properties.brand, str, schemas.Unset] = schemas.unset,
        cardholder_name: typing.Union[MetaOapg.properties.cardholder_name, str, schemas.Unset] = schemas.unset,
        expiration_month: typing.Union[MetaOapg.properties.expiration_month, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        expiration_year: typing.Union[MetaOapg.properties.expiration_year, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        last_four_digits: typing.Union[MetaOapg.properties.last_four_digits, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PaymentMethodCard':
        return super().__new__(
            cls,
            *args,
            billing_address=billing_address,
            bin=bin,
            brand=brand,
            cardholder_name=cardholder_name,
            expiration_month=expiration_month,
            expiration_year=expiration_year,
            last_four_digits=last_four_digits,
            _configuration=_configuration,
            **kwargs,
        )

from vimeo_python_sdk.model.payment_method_card_billing_address import PaymentMethodCardBillingAddress
