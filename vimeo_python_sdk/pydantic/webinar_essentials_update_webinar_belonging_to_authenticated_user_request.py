# coding: utf-8

"""
    Vimeo API

    Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.

    The version of the OpenAPI document: 3.4
    Created by: https://developer.vimeo.com/help
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from vimeo_python_sdk.pydantic.webinar_essentials_update_webinar_belonging_to_authenticated_user_request_email_settings import WebinarEssentialsUpdateWebinarBelongingToAuthenticatedUserRequestEmailSettings
from vimeo_python_sdk.pydantic.webinar_essentials_update_webinar_belonging_to_authenticated_user_request_privacy import WebinarEssentialsUpdateWebinarBelongingToAuthenticatedUserRequestPrivacy
from vimeo_python_sdk.pydantic.webinar_essentials_update_webinar_belonging_to_authenticated_user_request_schedule import WebinarEssentialsUpdateWebinarBelongingToAuthenticatedUserRequestSchedule

class WebinarEssentialsUpdateWebinarBelongingToAuthenticatedUserRequest(BaseModel):
    # The title of the webinar.
    title: typing.Optional[str] = Field(None, alias='title')

    # The description of the webinar.
    description: typing.Optional[str] = Field(None, alias='description')

    email_settings: typing.Optional[WebinarEssentialsUpdateWebinarBelongingToAuthenticatedUserRequestEmailSettings] = Field(None, alias='email_settings')

    # The password when **privacy.view** is `password`. Anyone with the password can view the videos generated by streaming to the webinar event.
    password: typing.Optional[str] = Field(None, alias='password')

    privacy: typing.Optional[WebinarEssentialsUpdateWebinarBelongingToAuthenticatedUserRequestPrivacy] = Field(None, alias='privacy')

    schedule: typing.Optional[WebinarEssentialsUpdateWebinarBelongingToAuthenticatedUserRequestSchedule] = Field(None, alias='schedule')

    # The status of the webinar.  Option descriptions:  * `ended` - The webinar has ended.  * `started` - The webinar has started. 
    status: typing.Optional[Literal["ended", "started"]] = Field(None, alias='status')

    # The time zone used in resolving the timestamps that are included in the automatically generated video titles for the webinar.
    time_zone: typing.Optional[str] = Field(None, alias='time_zone')
    class Config:
        arbitrary_types_allowed = True
